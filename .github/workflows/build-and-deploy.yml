# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: build and deploy

# @@ main 브랜치에 푸시(push) 이벤트가 발생할 때마다 워크플로우가 실행
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# @@ deploy라는 이름의 작업(job)을 정의
jobs:
  build-and-deploy:

# @@ 작업이 실행될 운영 체제를 최신 버전의 Ubuntu로 설정
    runs-on: ubuntu-latest
    steps:
    # @@ actions/checkout@v3 액션을 사용하여 소스 코드를 체크아웃
    - name : checkout source code
      uses: actions/checkout@v3
    # @@ .env 파일을 생성하고, 저장소 시크릿으로부터 값을 가져와 해당 파일에 쓰기 작업을 수행
    - name: create env file
      working-directory: ./
      run: |
        touch .env
        cat <<EOF >> .env
        ${{ secrets.ENV }}
        EOF
    - name: create docker-compose file
      working-directory: ./
      run: |
        touch docker-compose.yaml
        cat <<EOF >> docker-compose.yaml
        ${{ secrets.docker }}
        EOF
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

    # - name: Deploy using Docker Compose
    #   uses: docker/compose-action@v2
    #   with:
    #     compose-file: docker-compose.yml
    #     compose-args: up -d
        
    - name: ssh connect & production
      uses: appleboy/ssh-action@master
      env:
        COMPOSE: "./docker-compose.yaml"
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        password: ${{ secrets.PASSWORD }}
        port: 22
        script: |
          sudo docker system prune -a --volumes -f
          sudo docker-compose -f $COMPOSE down --rmi all
          sudo docker compose pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          sudo docker compose up -f $COMPOSE up -d

